<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="arraysort.todolist.mapper.TodoListMapper">

    <insert id="insertTodo" parameterType="arraysort.todolist.domain.TodoVO">
        insert into todo(user_id,
                         todo_title,
                         todo_content,
                         todo_start,
                         todo_end,
                         todo_priority,
                         todo_done)
        values (#{userId},
                #{todoTitle},
                #{todoContent},
                #{todoStart},
                #{todoEnd},
                #{todoPriority},
                #{todoDone});
    </insert>

    <select id="selectTodoListByUserId" parameterType="arraysort.todolist.domain.TodoListQueryDto"
            resultType="arraysort.todolist.domain.TodoVO">
        select todo_id,
               user_id,
               todo_title,
               todo_content,
               todo_start,
               todo_end,
               todo_priority,
               todo_done
        from todo
        where user_id = #{userId}
        and todo_done = #{todoDone}
        <if test="searchTitle != null and searchTitle != ''">
            and todo_title like concat('%', #{searchTitle}, '%')
        </if>
        order by todo_id desc
        limit #{limit} offset #{offset}
    </select>

    <select id="selectTodoDetailByTodoId" resultType="arraysort.todolist.domain.TodoVO">
        select todo_id,
               user_id,
               todo_title,
               todo_content,
               todo_start,
               todo_end,
               todo_priority,
               todo_done
        from todo
        where todo_id = #{todoId}
          and user_id = #{userId}
    </select>

    <update id="updateTodo" parameterType="arraysort.todolist.domain.TodoVO">
        update todo
        set todo_title    = #{todoVO.todoTitle},
            todo_content  = #{todoVO.todoContent},
            todo_start    = #{todoVO.todoStart},
            todo_end      = #{todoVO.todoEnd},
            todo_priority = #{todoVO.todoPriority}
        where todo_id = #{todoId}
    </update>

    <delete id="deleteTodo">
        delete
        from todo
        where todo_id = #{todoId}
    </delete>

    <select id="selectExistTodoId" resultType="int">
        select todo_id
        from todo
        where todo_id = #{todoId}
          and user_id = #{userId}
    </select>

    <select id="selectTotalCount" resultType="int">
        select count(*)
        from todo
        where user_id = #{userId}
        and todo_done = #{todoDone}
        <if test="searchTitle != null and searchTitle != ''">
            and todo_title like concat('%', #{searchTitle}, '%')
        </if>
    </select>

    <update id="updateTodoDone" parameterType="Long">
        update todo
        set todo_done = true
        where todo_id in
        <foreach item="todoId" collection="todoIds" open="(" separator="," close=")">
            #{todoId}
        </foreach>
    </update>

    <update id="updateTodoNotDone" parameterType="Long">
        update todo
        set todo_done = false
        where todo_id in
        <foreach item="todoId" collection="todoIds" open="(" separator="," close=")">
            #{todoId}
        </foreach>
    </update>

    <delete id="deleteCheckedTodos" parameterType="Long">
        delete
        from todo
        where todo_id in
        <foreach item="todoId" collection="todoIds" open="(" separator="," close=")">
            #{todoId}
        </foreach>
    </delete>

    <select id="selectExistTodoIdList" parameterType="map" resultType="Long">
        select todo_id
        from todo
        where user_id = #{userId}
        and todo_id in
        <foreach item="todoId" collection="todoIds" open="(" separator="," close=")">
            #{todoId}
        </foreach>
    </select>

</mapper>
